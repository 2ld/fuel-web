d-i debian-installer/locale string en_US.UTF-8

d-i debian-installer/splash boolean false

d-i console-setup/ask_detect        boolean false
d-i console-setup/layoutcode        string us
d-i console-setup/variantcode       string

# !!!! do not use netcfg/enable option because netcfg segfaults
# d-i netcfg/enable boolean false
d-i netcfg/choose_interface select auto

# by default we use dhcp but it is possible to set network
# configuration via kernel parameters
d-i netcfg/dhcp_timeout string 30
d-i netcfg/dhcp_failed note
d-i netcfg/dhcp_options select Configure network manually

# these lines must be added via system kopts
# d-i netcfg/get_hostname string nailgun
# d-i netcfg/get_domain string example.com

d-i hw-detect/load_firmware boolean true

d-i clock-setup/utc boolean true
d-i clock-setup/ntp boolean false
d-i time/zone string Etc/UTC

d-i partman/early_command string debconf-set partman-auto/disk `list-devices disk | head -n1`
d-i partman-iscsi/mainmenu string finish
d-i partman-auto/method string regular
d-i partman-lvm/device_remove_lvm boolean true
d-i partman-lvm/confirm boolean true
d-i partman/confirm_write_new_label boolean true
d-i partman/choose_partition        select Finish partitioning and write changes to disk
d-i partman/confirm boolean true
d-i partman/confirm_nooverwrite boolean true
d-i partman/default_filesystem string ext4

d-i apt-setup/restricted boolean true
d-i apt-setup/universe boolean true
d-i apt-setup/use_mirror boolean true

# We need this option as we use nailgun proprietary ubuntu 
# repository with upstream ubuntu netinstall images to install slave nodes.
# Alternatively you can rebuild upstream initrd.gz and substitute
# /usr/share/keyrings/ubuntu-archive-keyring.gpg file adding proprietary key in it. 
d-i debian-installer/allow_unauthenticated boolean true

d-i mirror/country string manual
d-i mirror/http/hostname string <%= node.cobbler.repoaddr %>
d-i mirror/http/directory string /ubuntu
d-i mirror/http/proxy string 

d-i base-installer/kernel/image     string linux-server

d-i passwd/root-login boolean false
d-i passwd/make-user boolean true
d-i passwd/user-fullname string ubuntu
d-i passwd/username string ubuntu
d-i passwd/user-password password r00tme
d-i passwd/user-password-again password r00tme
d-i user-setup/allow-password-weak boolean true
d-i user-setup/encrypt-home boolean false
d-i passwd/user-uid	        string 
d-i passwd/user-default-groups	   string adm cdrom dialout lpadmin plugdev sambashare


d-i pkgsel/include string openssh-server chef debconf-utils ruby-httpclient ohai rubygems ruby-json
d-i pkgsel/language-packs multiselect en
d-i pkgsel/update-policy select none
d-i pkgsel/upgrade select none
d-i pkgsel/updatedb boolean true


d-i grub-installer/skip     boolean false
d-i lilo-installer/skip     boolean false
d-i grub-installer/only_debian      boolean true
d-i grub-installer/with_other_os    boolean true
d-i finish-install/keep-consoles    boolean false
d-i finish-install/reboot_in_progress       note

d-i cdrom-detect/eject boolean true

d-i debian-installer/exit/halt boolean false
d-i debian-installer/exit/poweroff boolean false


# FIXME 
# deploy script needed to be implemented via package installing

d-i preseed/late_command string true && \
in-target sh -c '/usr/sbin/update-rc.d chef-client disable' && \
in-target sh -c '/bin/sed -i "s/^PermitRootLogin.*/PermitRootLogin yes/g" /etc/ssh/sshd_config' && \
in-target sh -c 'mkdir -p /root/.ssh && chmod 700 /root/.ssh' && \ 
in-target <%= @late_authorized_keys.init.cobbler_late_file("/opt/nailgun/.ssh/authorized_keys", "644") %> && \
in-target sh -c 'mkdir -p /opt/nailgun/bin' && \
in-target <%= @late_deploy.init.cobbler_late_file("/opt/nailgun/bin/deploy", "755") %>

