install
text
cdrom
reboot --eject
lang en_US.UTF-8
keyboard us
rootpw r00tme
timezone --utc America/New_York
zerombr
bootloader --location=mbr
clearpart --all --initlabel
autopart
#part /boot --fstype ext3 --size=250
#part pv.01 size=5000 --grow
#volgroup Nailgun --pesize=32768 pv.01
#logvol / --fstype ext4 --name=root --vgname=Nailgun --size=1024 --grow
#logvol swap --fstype swap --name=swap --vgname=Nailgun --size=512 --grow --maxsize=4096

%packages --nobase --excludedocs
@Core
wget
curl
crontabs
cronie
puppet
man
yum
openssh-clients

%post --log=/root/post-log
function setconf {
	echo
	echo -n "Enter hostname (FQDN): "; read hostname
	echo -n "Enter device name: "; read device
	echo -n "Enter ip: "; read ip
	echo -n "Enter netmask: "; read netmask
	echo -n "Enter default gw: "; read gw
	echo -n "Enter First DNS server: "; read dns1
	echo -n "Enter Second DNS server: "; read dns2
	hwaddr=`ifconfig $device | grep -i hwaddr | sed -e 's#^.*hwaddr[[:space:]]*##I'`
	echo
	echo You entered:
	show
	echo
	echo -n "Do you want to keep this settings (y/N):"
	read -n 1 answer
	if [[ $answer == "y" || $answer == "Y" ]]; then
		save_cfg
	fi
	echo
	echo -n "Do you want to configure another adapter (y/N):"
	read -n 1 answer
	if [[ $answer == "n" || $answer == "N" || $answer == "" ]]; then
	    endconf=1
	fi
	}

function show {
	echo "Device: $device, MAC address $hwaddr"
	echo "Hostname: $hostname"
	[ -z $ip ] && dhcp=1 && echo "IP address: will be obtained via DHCP"
	[ ! -z $ip ] && dhcp=0 && echo "IP address: $ip Netmask: $netmask"
	echo "Gateway: $gw"
	echo "DNS Server 1: $dns1"
	echo "DNS Server 2: $dns2"
	}

function save_cfg {
	scrFile="/etc/sysconfig/network-scripts/ifcfg-$device"
	sed -i -e 's#^\(HOSTNAME=\).*$#\1'"$hostname"'#' /etc/sysconfig/network
	grep -q "^\s*$ip\s+$hostname" /etc/hosts || echo "$ip $hostname" >> /etc/hosts
	echo GATEWAY=$gw >> /etc/sysconfig/network

	echo DEVICE=$device > $scrFile
	echo ONBOOT=yes >> $scrFile
	echo NM_CONTROLLED=no >> $scrFile
	echo HWADDR=$hwaddr >> $scrFile
	echo USERCTL=no >> $scrFile
	if [ $dhcp -eq 0 ]; then
		echo BOOTPROTO=static >> $scrFile
		echo IPADDR=$ip >> $scrFile
		echo NETMASK=$netmask >> $scrFile
		[ -z $dns1 ] || echo DNS1=$dns1 >> $scrFile
		[ -z $dns2 ] || echo DNS2=$dns2 >> $scrFile
	else
		echo BOOTPROTO=dhcp >> $scrFile
	fi
    	}

set -- `cat /proc/cmdline`
for I in $*; do case "$I" in *=*) eval $I;; esac ; done
hostname="nailgun.mirantis.com"
ip=$ip
netmask=$netmask
gw=$gw
device="eth0"
hwaddr=`ifconfig $device | grep -i hwaddr | sed -e 's#^.*hwaddr[[:space:]]*##I'`

curTTY=`tty`
exec < $curTTY > $curTTY 2> $curTTY
clear

endconf=0
show
echo -n "Press any key to make changes in network configuration"
read -n 1 -t 5 answer
if [ $? -gt 128 ]; then
	save_cfg
else
	while [ $endconf -eq 0 ]; do
		echo
		echo -n "Do you want to configure settings manually (y/N):"
		read -n 1 answer
		if [[ $answer == "y" || $answer == "Y" ]]; then
		    setconf
		else
		    endconf=1
		fi
	done
fi

# Mounting cd
echo
mkdir /tmp/cdrom
mount /dev/cdrom /tmp/cdrom

# Copying Repo to the nailgun /var/www directory
repodir="/var/www/nailgun"
mkdir -p ${repodir}/centos/6.3/nailgun/x86_64
cp -r /tmp/cdrom/images ${repodir}/centos/6.3/nailgun/x86_64
cp -r /tmp/cdrom/isolinux ${repodir}/centos/6.3/nailgun/x86_64
cp -r /tmp/cdrom/repodata ${repodir}/centos/6.3/nailgun/x86_64
cp -r /tmp/cdrom/Packages ${repodir}/centos/6.3/nailgun/x86_64

# Copying centos .ISO to the nailgun directory
cp -r /tmp/cdrom/iso ${repodir}

# Copying eggs/gems to the nailgun directory
cp -r /tmp/cdrom/eggs ${repodir}
cp -r /tmp/cdrom/gems ${repodir}

# Copying rabbitmq plugins
cp -r /tmp/cdrom/rabbitmq-plugins ${repodir}

# Copying bootstrap image
mkdir -p ${repodir}/bootstrap
cp -r /tmp/cdrom/bootstrap/initramfs.img ${repodir}/bootstrap
cp -r /tmp/cdrom/bootstrap/linux ${repodir}/bootstrap

mkdir -p /root/.ssh
chmod 700 /root/.ssh
cp /tmp/cdrom/bootstrap/bootstrap.rsa /root/.ssh
chmod 600 /root/.ssh/bootstrap.rsa

# Copying puppet manifests
cp -r /tmp/cdrom/puppet/* /etc/puppet/modules/

# Prepare local repository specification
rm /etc/yum.repos.d/CentOS*.repo
cat > /etc/yum.repos.d/nailgun.repo << EOF
[nailgun]
name=Nailgun Local Repo
baseurl=file:/var/www/nailgun/centos/6.3/nailgun/x86_64
gpgcheck=0
EOF

# Disable GSSAPI in ssh server config
sed -i -e "/^\s*GSSAPICleanupCredentials yes/d" -e "/^\s*GSSAPIAuthentication yes/d" /etc/ssh/sshd_config

# Copying bootstrap_admin_node.sh , chmod it and adding to the rc.local to run it once
cp /tmp/cdrom/bootstrap_admin_node.sh /tmp
chmod 0777 /tmp/bootstrap_admin_node.sh
echo "/tmp/bootstrap_admin_node.sh" >> /etc/rc.local

# Unmounting cd to succesfull eject
umount -f /dev/cdrom
rm -rf /tmp/cdrom

%end
