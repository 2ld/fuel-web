#!/usr/bin/env ruby

require 'naily'

require 'logger'
require 'ostruct'
require 'optparse'

options = OpenStruct.new
options.daemonize = false
options.config_path = '/etc/naily/nailyd.conf'
options.log_path = nil
options.log_level = :error

OptionParser.new do |opts|
  opts.banner = 'Usage: nailyd [options]'

  opts.separator ''
  opts.separator 'Options:'

  opts.on('-d', '--[no-]deamonize', 'Daemonize server')    { |flag| options.daemonize = flag }
  opts.on('-c', '--config PATH', 'Use custom config file') do |path|
    unless File.exists?(path)
      puts "Error: config file #{options.config_path} was not found"
      exit
    end

    options.config_path = path
  end

  opts.on('-l', '--logfile PATH' 'Log file path') do |path|
    options.log_path = path
  end

  levels = %w{fatal error warn info debug}
  opts.on('--loglevel LEVEL', levels, "Logging level (#{levels.join(', ')})") do |level|
    options.log_level = level
  end

  opts.on_tail('-h', '--help', 'Show this message') do
    puts opts
    exit
  end

  opts.on_tail('-v', '--version', 'Show version') do
    puts Naily::VERSION
    exit
  end
end.parse!

config = Naily::Config.default
config.update(Naily::Config.load(options.config_path)) if File.exists?(options.config_path)

if options.daemonize
  # After daemonize we can't log to STDOUT, pick a default log file
  options.log_path ||= "#{Dir.pwd}/naily.log"

  require 'daemons'
  Daemons.daemonize
end

Naily.logger = options.log_path ? Logger.new(options.log_path) : Logger.new(STDOUT)
Naily.logger.level = Logger.const_get(options.log_level.upcase)

server = Naily::Server.new(config)

server.run

