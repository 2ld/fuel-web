LISTEN_ADDRESS: "127.0.0.1"
LISTEN_PORT: "8001"
DEVELOPMENT: "0"

FIXTURES_TO_UPLOAD:
  - "openstack_folsom.json"
  - "start_notification.json"

DATABASE:
  engine: "<%= database_engine %>"
  name: "<%= databasefile %>"
  host: "<%= database_host %>"
  port: "<%= database_port %>"
  user: "<%= database_user %>"
  passwd: "<%= database_passwd %>"

STATIC_DIR: "<%= staticdir %>"
TEMPLATE_DIR: "<%= templatedir %>"
NETWORK_POOLS:
  public:
    - "240.0.0.0/16"
  private10:
    - "10.0.0.0/8"
  private172:
    - "172.16.0.0/12"
  private192:
    - "192.168.0.0/16"

NET_EXCLUDE:
  - "<%= @exclude_network %>/<%= @exclude_cidr %>"

VLANS_RANGE_START: "100"
VLANS_RANGE_END: "1000"

RABBITMQ:
  fake: "0"
  hostname: "127.0.0.1"
  port: 5672
  userid: "<%= rabbitmq_naily_user %>"
  password: "<%= rabbitmq_naily_password %>"
  virtual_host: "/"

CUSTOM_LOG: "/var/log/nailgun.log"
ACCESS_LOG: "/var/log/nailgun_access.log"

PATH_TO_SSH_KEY: "/root/.ssh/id_rsa"
PATH_TO_BOOTSTRAP_SSH_KEY: "/root/.ssh/bootstrap.rsa"

COBBLER_URL: "<%= scope.lookupvar('nailgun::cobbler_url') %>"
COBBLER_USER: "<%= cobbler_user %>"
COBBLER_PASSWORD: "<%= cobbler_password %>"
COBBLER_PROFILE: "centos63-x86_64"

MCO_PSKEY: "<%= mco_pskey %>"
MCO_STOMPHOST: <%= scope.lookupvar('nailgun::mco_stomphost') %>
MCO_STOMPPORT: "61613"
MCO_STOMPUSER: "<%= mco_stompuser %>"
MCO_STOMPPASSWORD: "<%= mco_stomppassword %>"

PUPPET_MASTER_HOST: "<%= puppet_master_hostname %>"
PUPPET_VERSION: "2.7.19"

DNS_DOMAIN: "<%= domain %>"
DNS_SERVERS: "<%= scope.lookupvar('nailgun::puppet_master_ip') %>"
DNS_SEARCH: "<%= domain %>"

LOG_FORMATS:
  - &remote_syslog_log_format
    regexp: '^(?P<date>\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2})\s(?P<level>[a-z]{3,7}):\s(?P<text>.*)$'
    levels:
      - DEBUG
      - INFO
      - NOTICE
      - WARNING
      - ERR
      - CRIT
      - ALERT
      - EMERG
  - &syslog_log_format
    regexp: '^(?P<ip>\d+\.\d+\.\d+\.\d+)\s+(?P<date>\w{3}\s+\d+\s+\d+:\d+:\d+)\s+(?P<fqdn>[\w\.\-]+)\s+(?P<component>[\w\.\-/]+):\s+(?:[\d:,]+\s+(?P<level>[A-Z]+)\s+)?(?:\s*:\s*)?(?P<text>.*)$'
    levels:
      - DEBUG
      - INFO
      - NOTICE
      - WARNING
      - ERR
      - CRIT
      - ALERT
      - EMERG
  - &python_log_format
    regexp: '^(?P<date>\d{4}-\d{2}-\d{2}\s\d{2}:\d{2}:\d{2},\d{3})\s(?P<level>[A-Z]+)\s(?P<text>.*)$'
    levels:
      - DEBUG
      - INFO
      - WARNING
      - ERROR
      - CRITICAL
  - &ruby_log_format
    regexp: '^\w,\s\[(?P<date>\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2})\.\d+\s\#\d+\]\s+(?P<level>[A-Z]+)\s+--\s:\s*(?P<text>.*)$'
    skip_regexp: '^\#'
    levels:
      - DEBUG
      - INFO
      - WARN
      - ERROR
      - FATAL

LOG_TYPES:
  - &local_log_type
    remote: False
  - &remote_log_type
    remote: True
    base: '/var/log/remote/'

LOGS:
# Master node logs.
  - id: nailgun
    name: "Nailgun log"
    <<: *local_log_type
    <<: *python_log_format
    path: *nailgun_log
  - id: naily
    name: "Naily log"
    <<: *local_log_type
    <<: *ruby_log_format
    path: '/var/log/naily/naily.log'
  - id: astute
    name: "Astute log"
    <<: *local_log_type
    <<: *ruby_log_format
    path: '/var/log/astute.log'
# Target node installation logs.
  - id: 'install/syslog'
    name: "node: install/syslog.log"
    <<: *remote_log_type
    <<: *remote_syslog_log_format
    path: 'install/syslog.log'
  - id: 'install/storage'
    name: "node: install/storage.log"
    <<: *remote_log_type
    <<: *remote_syslog_log_format
    path: 'install/storage.log'
  - id: 'install/anaconda'
    name: "node: install/anaconda.log"
    <<: *remote_log_type
    <<: *remote_syslog_log_format
    path: 'install/anaconda.log'
  - id: 'install/ks-pre'
    name: "node: install/ks-pre"
    <<: *remote_log_type
    <<: *remote_syslog_log_format
    path: 'install/ks-pre.log'
  - id: 'install/ks-post'
    name: "node: install/ks-post"
    <<: *remote_log_type
    <<: *remote_syslog_log_format
    path: 'install/ks-post.log'
# Bootstrap node logs.
  - id: 'bootstrap/dmesg'
    name: "node: bootstrap/dmesg"
    <<: *remote_log_type
    <<: *remote_syslog_log_format
    path: 'bootstrap/dmesg.log'
  - id: 'bootstrap/secure'
    name: "node: bootstrap/secure"
    <<: *remote_log_type
    <<: *remote_syslog_log_format
    path: 'bootstrap/secure.log'
  - id: 'bootstrap/messages'
    name: "node: bootstrap/messages"
    <<: *remote_log_type
    <<: *remote_syslog_log_format
    path: 'bootstrap/messages.log'
  - id: 'bootstrap/mco'
    name: "node: bootstrap/mcollective.log"
    <<: *remote_log_type
    <<: *remote_syslog_log_format
    path: 'bootstrap/mcollective.log'
  - id: 'bootstrap/agent'
    name: "node: bootstrap/agent.log"
    <<: *remote_log_type
    <<: *remote_syslog_log_format
    path: 'bootstrap/agent.log'
